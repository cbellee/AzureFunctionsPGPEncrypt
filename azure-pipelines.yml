# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - main
    - master
  
variables:
    # Azure Resource Manager connection
    azureSubscription: 'internal_azure_subscription'

    # resource group to target for deployment
    resourceGroupName: 'pepper-poc-rg'

    # location
    location: 'australiaeast'

    # Agent VM image name
    vmImageName: 'windows-latest'

    # function App Name
    functionAppName: 'func-tdtwi4'

    configuration: 'Release'

stages:
  - stage: Build
    displayName: Build
  
    jobs:
    - job: BuildAzureFunctionsPGPEncrypt
      displayName: 'Build AzureFunctionsPGPEncrypt'
      pool:
        vmImage: $(vmImageName)
  
      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Build AzureFunctionsPGPEncrypt'
        inputs:
          command: 'build'
          projects: |
            src/AzureFunctionsPGPEncrypt/*.csproj
          arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration $(configuration)
  
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/AzureFunctionsPGPEncrypt.$(Build.BuildId).zip
          replaceExistingArchive: true
  
      - publish: $(Build.ArtifactStagingDirectory)/AzureFunctionsPGPEncrypt.$(Build.BuildId).zip
        artifact: AzureFunctionsPGPEncrypt_drop

    - job: BuildPGPEncryptConsoleApp
      displayName: 'Build PGPEncryptConsoleApp'
      pool:
        vmImage: $(vmImageName)

      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Build PGPEncryptConsoleApp'
        inputs:
          command: 'build'
          projects: |
            src/PGPEncryptConsoleApp/*.csproj
          arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration $(configuration)

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/PGPEncryptConsoleApp.$(Build.BuildId).zip
          replaceExistingArchive: true

      - task: CopyFiles@2
        displayName: Copy files
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/deploy'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/deploy'

      - publish: $(Build.ArtifactStagingDirectory)/PGPEncryptConsoleApp.$(Build.BuildId).zip
        artifact: PGPEncryptConsoleApp_drop

      - publish: $(Build.ArtifactStagingDirectory)/PGPEncryptConsoleApp.$(Build.BuildId).zip
        artifact: PGPEncryptConsoleApp_drop

      - publish: $(Build.ArtifactStagingDirectory)/deploy
        artifact: arm_template_drop

  - stage: DeployFunctionsToAzure
    displayName: 'Deploy Azure Functions'
    dependsOn: Build
    condition: succeeded()
  
    jobs:
    - deployment: Deploy
      displayName: Deploy
      environment: 'development'
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'validate infrastructure template'
              inputs:
                action: Create Or Update Resource Group
                azureResourceManagerConnection: '$(azureSubscription)'
                csmFile: $(Pipeline.Workspace)/arm_template_drop/azuredeploy.json
                csmParametersFile: $(Pipeline.Workspace)/arm_template_drop/azuredeploy.parameters.json
                resourceGroupName: $(resourceGroupName)
                location: $(location)
                deploymentMode: Validation
                deploymentScope: Resource Group
                overrideParameters: -location $(location)

            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'deploy infrastructure template'
              inputs:
                action: Create Or Update Resource Group
                azureResourceManagerConnection: '$(azureSubscription)'
                csmFile: $(Pipeline.Workspace)/arm_template_drop/azuredeploy.json
                csmParametersFile: $(Pipeline.Workspace)/arm_template_drop/azuredeploy.parameters.json
                resourceGroupName: $(resourceGroupName)
                location: $(location)
                deploymentMode: Incremental
                deploymentScope: Resource Group
                deploymentName: 'deploy-infrastructure'
                overrideParameters: -location $(location)
                deploymentOutputs: infraDeploymentOutputs

            - task: PowerShell@2
              displayName: 'Get ARM Deployment Outputs'
              inputs:
                targetType: 'inline'
                script: |
                  $outputs = '$(infraDeploymentOutputs)' | ConvertFrom-Json
                  foreach ($output in $outputs.PSObject.Properties) {
                    Write-Host "$($output.Name) - $($output.Value.value)"
                    Write-Host "##vso[task.setvariable variable=$($output.Name);]$($output.Value.value)" 
                  }
  
            - task: AzureFunctionApp@1
              displayName: 'AzureFunctionsPGPEncrypt deploy to Azure'
              inputs:
                azureSubscription: '$(azureSubscription)'
                resourceGroupName: $(resourceGroupName)
                appType: functionApp
                appName: $(functionAppName)
                package: '$(Pipeline.Workspace)/AzureFunctionsPGPEncrypt_drop/AzureFunctionsPGPEncrypt.$(Build.BuildId).zip'

            - task: AzureFunctionApp@1
              displayName: 'PGPEncryptConsoleApp deploy to Azure'
              inputs:
                azureSubscription: '$(azureSubscription)'
                resourceGroupName: $(resourceGroupName)
                appType: functionApp
                appName: $(functionAppName)
                package: '$(Pipeline.Workspace)/PGPEncryptConsoleApp_drop/PGPEncryptConsoleApp.$(Build.BuildId).zip'

            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'validate logic app template'
              inputs:
                action: Create Or Update Resource Group
                azureResourceManagerConnection: '$(azureSubscription)'
                csmFile: $(Pipeline.Workspace)/arm_template_drop/azuredeploy-logic-app.json
                csmParametersFile: $(Pipeline.Workspace)/arm_template_drop/azuredeploy-logic-app.parameters.json
                resourceGroupName: $(resourceGroupName)
                location: $(location)
                deploymentMode: Validation
                deploymentScope: Resource Group
                overrideParameters: -location $(location)

            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'deploy logic app template'
              inputs:
                action: Create Or Update Resource Group
                azureResourceManagerConnection: '$(azureSubscription)'
                csmFile: $(Pipeline.Workspace)/arm_template_drop/azuredeploy-logic-app.json
                csmParametersFile: $(Pipeline.Workspace)/arm_template_drop/azuredeploy-logic-app.parameters.json
                resourceGroupName: $(resourceGroupName)
                location: $(location)
                deploymentMode: Incremental
                deploymentScope: Resource Group
                deploymentName: 'deploy-infrastructure'
                overrideParameters: -location $(location)
                deploymentOutputs: logicAppDeploymentOutputs
